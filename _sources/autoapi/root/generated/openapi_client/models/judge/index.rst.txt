root.generated.openapi_client.models.judge
==========================================

.. py:module:: root.generated.openapi_client.models.judge

.. autoapi-nested-parse::

   Root Signals API

   Root Signals JSON API provides a way to access Root Signals using provisioned API token

   The version of the OpenAPI document: 1.0.0 (latest)
   Generated by OpenAPI Generator (https://openapi-generator.tech)

   Do not edit the class manually.



Classes
-------

.. autoapisummary::

   root.generated.openapi_client.models.judge.Judge


Module Contents
---------------

.. py:class:: Judge

   Bases: :py:obj:`pydantic.BaseModel`


   Judge


   .. py:attribute:: created_at
      :type:  Optional[datetime.datetime]


   .. py:attribute:: evaluators
      :type:  List[root.generated.openapi_client.models.nested_evaluator.NestedEvaluator]


   .. py:attribute:: files
      :type:  List[root.generated.openapi_client.models.judge_files_inner.JudgeFilesInner]


   .. py:attribute:: id
      :type:  pydantic.StrictStr


   .. py:attribute:: inputs
      :type:  Dict[str, root.generated.openapi_client.models.evaluator_inputs_value.EvaluatorInputsValue]


   .. py:attribute:: meta
      :type:  Dict[str, Any]


   .. py:attribute:: model_config


   .. py:attribute:: name
      :type:  typing_extensions.Annotated[str, Field(min_length=3, strict=True, max_length=512)]


   .. py:attribute:: objective
      :type:  root.generated.openapi_client.models.nested_vector_objective.NestedVectorObjective


   .. py:attribute:: stage
      :type:  Optional[typing_extensions.Annotated[str, Field(strict=True, max_length=255)]]
      :value: None



   .. py:attribute:: status
      :type:  root.generated.openapi_client.models.status_enum.StatusEnum


